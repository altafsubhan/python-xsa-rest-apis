module.exports = {

    models: [ "srv", "services.cds", "services.csn" ],  conf:'service',
    dest: '${folder}/src/main/resources/edmx', //NOSONAR

    prebuild (options) {
        // in case of java services, add service models to db models
        if (this.config.data && this.config.data.includeServiceViews !== false) {
            const db = this.all.find (m => m.category === 'db')   // REVISIT: what to do in case of more than one db module?
            if (db)  db.models.push(...options.models)
        }
    },

    build (options) { return this.load(options.models) .then (m => {

        let o = Object.assign ({service:'all'}, options, options.odata)
        o.sql_mapping = this.config.data.sql_mapping

        // csn for service providers
        let csn = this.unfold.for.odata (m,o)
        this.write (csn) .to ('csn.json')

        // edmx for $metadata
        let _default = o.edmxFileSuffix || ''
        for (let [locm,{lang}] of this.localize (m, options.lang || 'all') ) {
            for (let [each,{name}] of this.compile(locm).to('edmx',o)) {
                this.write (each) .to (name + (lang ? '_'+lang : _default), '.xml')
            }
        }

    })}
}
