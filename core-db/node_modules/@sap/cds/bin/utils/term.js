const debug = process.env.DEBUG
const term = {
  reset: '\x1b[0m',
  bold: '\x1b[1m',
  red: '\x1b[91m',
  green: '\x1b[32m',
  yellow: '\x1b[33m'
}

const asErr = module.exports.error = o => debug ? o : as(term.red + term.bold, o)
module.exports.warn  = o => as(term.yellow, o)
module.exports.info  = o => as(term.green, o)

// 'Error: foo'  ->  '[ERROR] foo'  (Maven-like, allows for better grepping in logs)
module.exports.decorate = {
  error: o => debug ? o : `[${asErr('ERROR')}] ${stripErrPrefix(o)}`
}

function as(codes, o) {
  return process.stdin.isTTY ? (codes + o + term.reset) : ('' + o)
}

// strips the general 'Error: ' prefix, so that we can add our own
function stripErrPrefix(o) {
  return o && o.toString ? o.toString().replace(/^Error: /i, '') : o
}