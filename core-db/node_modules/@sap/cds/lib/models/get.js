const cdsv = require('./cdsv')

module.exports = Object.assign (get, { all:load })

function get (model) {
  let all = this.resolve (model)
  if (!all)  return notFound (model)
  if (all.length > 1)  throw new Error (`You can only cds.get a single model`)
  return cdsv.compile (all, '', { parseOnly:true })
}

function load (model, options) {
  // if (!model || model.length == 0)  return Promise.resolve()
  let all = this.resolve (model)
  return all ? cdsv.compile (all, '', options) : notFound (model)
}

function notFound (model) {
  return Promise.reject (Object.assign (new Error (`Couldn't find a CDS model at: ${_local(model)}`),{
    code: 'MODEL_NOT_FOUND', model
  }))
}

const _cwd = process.cwd() + require('path').sep
const _local = (path) => (''+path).replace(_cwd,'')