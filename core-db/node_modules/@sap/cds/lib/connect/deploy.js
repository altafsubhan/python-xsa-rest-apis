const SQL = require ('../connect/2sql')
const cds = require ('../index.js')
const path = require ('path')


module.exports = function deploy (_model='db', options) {

    const name4 = SQL.naming (options)
    const get = {model:(
        typeof _model === 'string' ? this.load(_model) :
        typeof _model === 'object' ? {then: f => f(_model)} :
        this.model ? {then: f => f(this.model)} :
        this.ready || (()=>{ throw new Error('No model specified or configured!') })()
    )}

    return get.model.then (csn => {

        if (this.driver.deploy)  return this.driver.deploy (csn)
        else  return (this || cds) .run (db=>{"serialized transaction" //NOSONAR

            const drops = cds.reflect(csn).all(cds.entity) .map (DROP)
            const creates = cds.compile.to.sql (csn,{stmts:1})
            for (let each of drops)  db.run(each)
            for (let each of creates)  db.run(each)

        }) .finally(() => {
           // first try to load w/o executing
           let init
           try { init = require.resolve (path.resolve('db/init')) }
           catch (e) { if (e.code !== 'MODULE_NOT_FOUND') throw e }

           // then execute w/o ignoring errors
           if (init)  return require (init)
        })

    })

    function DROP(e) {
        return `DROP ${e.query || e.type || e.source ? 'VIEW' : 'TABLE'} IF EXISTS ${name4.entity(e.name)}`
    }
}

