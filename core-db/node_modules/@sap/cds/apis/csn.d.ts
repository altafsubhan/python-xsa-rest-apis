import { SELECT, expr, predicate } from "./CQN";

/** A parsed model. */
export interface Model {
    namespace? : string
    using? : { name: string, as?: string, from?: string }[]
    definitions? : Definitions
    extensions? : Definition[]
}

export interface Definitions { 
    [name:string]: Definition 
} 

export interface Definition {
    kind? : _kind
    type? : string
}
enum _kind { entity, view, type, facet }


export interface struct extends Definition {
    elements? : Definitions 
}
export interface entity extends struct {
    query?: SELECT & {
        cql: string
    }
}
export interface Association extends Definition {
    target : string | Definition
    via? : string | Definition
    on? : predicate
}
export interface Composition extends Association {}
